plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    // id 'application'
}

// application {
    // mainClassName = 'examples.DeterministicExample'
//     randomExample = 'src.main.java.examples.RandomExample'
//     fluidMovementExample = 'src.main.java.examples.FluidMovementExample'
// }

task run {
    doLast {
        println "Instruction to execute the examples in this project:"
        println " - gradle runDeterministicExample"
        println " - gradle runFluidMovementsExample"
        println " - gradle runRandomExample"
    }
}

// Configura un task per eseguire il primo main
task runDeterministicExample(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = 'examples.DeterministicExample' // Sostituisci con il nome completo della tua prima classe main
}

// Configura un task per eseguire il secondo main
task runFluidMovementsExample(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = 'examples.FluidMovementsExample' // Sostituisci con il nome completo della tua seconda classe main
}

// Configura un task per eseguire il terzo main
task runRandomExample(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = 'examples.RandomExample' // Sostituisci con il nome completo della tua terza classe main
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
}